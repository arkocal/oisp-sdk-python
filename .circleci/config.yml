# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
executors:
  vm-executor:
    machine:
      enabled: true
      image: ubuntu-1604:201903-01
    working_directory: ~/repo
    environment:
      shell: /bin/bash
      TERM: xterm
      TZ: "Europe/Berlin"
  docker-executor:
    docker:
      - image: circleci/node:10.0
    working_directory: ~/repo
    environment:
      shell: /bin/bash
      TERM: xterm

commands:
  install-sdk:
    description: "Install sdk and required testing tools."
    steps:
      - run:
          name: "Prepare Ubuntu and install SDK"
          command: |
            sudo apt update || echo "update (partially) failed, probably OK to continue"
            sudo rm -rf /opt/circleci/.pyenv && curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash
            pyenv install 3.8.5
            pyenv local 3.8.5
            pip install pylint pycodestyle pydocstyle setuptools
            python setup.py install
  check-signed:
    description: "Check whether latest commit is signed"
    steps:
      - run:
          name: Check whether most recent commit is signed
          command: |
            MESSAGE=`git log -1 --pretty=%B`
            echo "Checking whether signed"
            if [[ "${MESSAGE}" == *Signed-off-by:*@* ]]; then
              echo "Commit is signedoff"
            else
              echo "Commit is not signedoff"
              exit 1
            fi

  lint:
    description: "Run linters for code and comments."
    steps:
      - run:
          command: |
            pyenv local 3.8.5
            make lint

  build-and-deploy-oisp:
    description: "Build and deploy oisp"
    steps:
      - run:
          name: Checkout OISP and build
          shell: /bin/bash
          command: |
            git clone https://github.com/Open-IoT-Service-Platform/platform-launcher.git
            cd platform-launcher
            git checkout develop
            git submodule init
            git submodule update
            yes | make update
            bash util/setup-ubuntu18.04.sh
            sudo dd if=/dev/zero of=/swapfile bs=1M count=8000
            sudo mkswap /swapfile
            sudo swapon /swapfile
            make build DOCKER_TAG=test
            export PATH=$PATH:/snap/bin
            make import-images DOCKER_TAG=test DEBUG=true
            npm install nodemailer
            export NODOCKERLOGIN=true
            make deploy-oisp-test DOCKER_TAG=test
            make wait-until-ready

  test-sdk:
    description: "Finally test the Python SDK"
    steps:
      - run:
          name: "Run tests"
          shell: /bin/bash
          command: "make test"


jobs:
  e2e-test:
    executor: vm-executor
    steps:
      - checkout
      - check-signed
      - install-sdk
      - lint
      - build-and-deploy-oisp
      - test-sdk

workflows:
  workflow:
    jobs:
      - e2e-test
